import java.util.Scanner;

public class CreaturePowerLevels {

    public static void main(String[] args) {
        // Initialize an integer array to store power levels
        int[] powerLevels = new int[10];

        // Input power levels from the user
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter 10 power levels of creatures:");
        for (int i = 0; i < 10; i++) {
            powerLevels[i] = scanner.nextInt();
        }
        scanner.close();

        // Perform Bubble Sort in ascending order
        bubbleSort(powerLevels);
        System.out.println("Bubble Sort (Ascending):");
        displayArray(powerLevels);

        // Perform Selection Sort in descending order
        selectionSort(powerLevels);
        System.out.println("Selection Sort (Descending):");
        displayArray(powerLevels);

        // Calculate and display analysis
        System.out.println("Analysis:");
        System.out.println("Sum of Even Numbers: " + sumEvenNumbers(powerLevels));
        System.out.println("Sum of Odd Numbers: " + sumOddNumbers(powerLevels));
        System.out.println("Minimum Power Level: " + findMin(powerLevels));
        System.out.println("Maximum Power Level: " + findMax(powerLevels));
    }

    // Bubble Sort algorithm
    public static void bubbleSort(int[] arr) {
        int n = arr.length;
        for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < n - i - 1; j++) {
                if (arr[j] > arr[j + 1]) {
                    // Swap elements if they are in the wrong order
                    int temp = arr[j];
                    arr[j] = arr[j + 1];
                    arr[j + 1] = temp;
                }
            }
        }
    }

    // Selection Sort algorithm
    public static void selectionSort(int[] arr) {
        int n = arr.length;
        for (int i = 0; i < n - 1; i++) {
            int maxIndex = i; // Assume the first element is the maximum
            for (int j = i + 1; j < n; j++) {
                if (arr[j] > arr[maxIndex]) {
                    maxIndex = j; // Update maxIndex if a larger element is found
                }
            }
            // Swap the found maximum element with the first element
            int temp = arr[maxIndex];
            arr[maxIndex] = arr[i];
            arr[i] = temp;
        }
    }

    // Method to display the array
    public static void displayArray(int[] arr) {
        for (int value : arr) {
            System.out.print(value + " ");
        }
        System.out.println();
    }

    // Method to calculate the sum of even numbers
    public static int sumEvenNumbers(int[] arr) {
        int sum = 0;
        for (int value : arr) {
            if (value % 2 == 0) {
                sum += value; // Add to sum if the number is even
            }
        }
        return sum;
    }

    // Method to calculate the sum of odd numbers
    public static int sumOddNumbers(int[] arr) {
        int sum = 0;
        for (int value : arr) {
            if (value % 2 != 0) {
                sum += value; // Add to sum if the number is odd
            }
        }
        return sum;
    }

    // Method to find the minimum power level
    public static int findMin(int[] arr) {
        int min = arr[0];
        for (int value : arr) {
            if (value < min) {
                min = value; // Update min if a smaller element is found
            }
        }
        return min;
    }

    // Method to find the maximum power level
    public static int findMax(int[] arr) {
        int max = arr[0];
        for (int value : arr) {
            if (value > max) {
                max = value; // Update max if a larger element is found
            }
        }
        return max;
    }
}
